# -*- coding: utf-8 -*-
"""streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jEc_bXF8oQq1ZBJb-8HfzEFSYkljQ06b
"""

# app_streamlit.py
import streamlit as st
import requests

# Konfigurasi halaman
st.set_page_config(page_title="Prediksi Obesitas", layout="centered")
st.title("ðŸ©º Prediksi Kategori Obesitas")

API_URL = "http://127.0.0.1:8000/predict"

with st.form("input_form"):
    st.subheader("Masukkan Data Anda:")

    Gender = st.selectbox("Gender", ["Male", "Female"])
    Age = st.number_input("Umur (tahun)", min_value=1.0, max_value=100.0, value=25.0)
    Height = st.number_input("Tinggi Badan (meter)", min_value=1.0, max_value=2.5, value=1.70)
    Weight = st.number_input("Berat Badan (kg)", min_value=30.0, max_value=200.0, value=70.0)
    family_history_with_overweight = st.selectbox("Ada riwayat keluarga overweight?", ["yes", "no"])
    FAVC = st.selectbox("Sering konsumsi makanan berkalori tinggi?", ["yes", "no"])
    FCVC = st.slider("Frekuensi konsumsi sayur (1â€“3)", 1.0, 3.0, 2.0)
    NCP = st.slider("Jumlah makanan utama per hari", 1.0, 4.0, 3.0)
    CAEC = st.selectbox("Kebiasaan ngemil", ["Always", "Frequently", "Sometimes", "no"])
    SMOKE = st.selectbox("Merokok?", ["yes", "no"])
    CH2O = st.slider("Konsumsi air per hari (liter)", 1.0, 3.0, 2.0)
    SCC = st.selectbox("Memantau kalori yang dikonsumsi?", ["yes", "no"])
    FAF = st.slider("Frekuensi olahraga (jam/minggu)", 0.0, 3.0, 1.0)
    TUE = st.slider("Waktu penggunaan gadget per hari (jam)", 0.0, 3.0, 1.0)
    CALC = st.selectbox("Konsumsi alkohol", ["Always", "Frequently", "Sometimes", "no"])
    MTRANS = st.selectbox("Transportasi utama", [
        "Walking", "Bike", "Motorbike", "Public_Transportation", "Automobile"
    ])

    submitted = st.form_submit_button("Prediksi")

# Saat tombol Submit ditekan
if submitted:
    with st.spinner("Mengirim data ke server..."):
        data = {
            "Gender": Gender,
            "Age": Age,
            "Height": Height,
            "Weight": Weight,
            "family_history_with_overweight": family_history_with_overweight,
            "FAVC": FAVC,
            "FCVC": FCVC,
            "NCP": NCP,
            "CAEC": CAEC,
            "SMOKE": SMOKE,
            "CH2O": CH2O,
            "SCC": SCC,
            "FAF": FAF,
            "TUE": TUE,
            "CALC": CALC,
            "MTRANS": MTRANS
        }

        try:
            response = requests.post(API_URL, json=data)
            result = response.json()

            # Tampilkan hasil
            if response.status_code == 200:
                st.success(f"ðŸ“Š Prediksi Anda: **{result['prediction']}**")
            else:
                st.error(f"Terjadi kesalahan: {response.text}")

        except Exception as e:
            st.error(f"Gagal menghubungi API: {e}")

